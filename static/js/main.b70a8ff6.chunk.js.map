{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","components/ContactsForm/ContactsForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Modal/Modal.js","components/App.js","index.js"],"names":["saveContact","createAction","name","number","payload","id","shortid","generate","removeContact","changeFilter","contactsReducer","createReducer","items","filter","message","showModal","contactsActions","state","some","contact","length","rootReducer","combineReducers","contacts","store","createStore","composeWithDevTools","ContactsForm","handleChange","target","value","setState","handleSubmit","event","onContact","props","preventDefault","resetForm","this","onSubmit","type","className","placeholder","onChange","Component","connect","dispatch","ContactListItem","onRemove","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","onRemoveContact","onToggleCompleted","map","key","handleFilter","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","children","App","closeModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b70a8ff6.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst saveContact = createAction('contacts/save', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst removeContact = createAction('contacts/remove');\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { saveContact, removeContact, changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nconst initialState = {\n  items: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  filter: '',\n  message: '',\n  showModal: false,\n};\n\nconst contactsReducer = createReducer(initialState, {\n  [contactsActions.saveContact]: (state, { payload }) => {\n    const isAlreadyInContacts = state.items.some(\n      contact => contact.name === payload.name,\n    );\n    if (isAlreadyInContacts) {\n      state.showModal = true;\n      state.message = `${payload.name} is already in contacts`;\n      //console.log(state.message);\n\n      //alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    if (!payload.name || !payload.number) {\n      state.showModal = true;\n      state.message = 'Fill in all the fields';\n      //alert('Fill in all the fields');\n      return state;\n    }\n\n    return {\n      ...state,\n      items: [...state.items, payload],\n      message: state.message,\n      showModal: state.showModal,\n    };\n  },\n\n  [contactsActions.removeContact]: (state, { payload }) => {\n    const items = state.items.filter(({ id }) => id !== payload);\n    return items.length === 1\n      ? {\n          items: items,\n          filter: '',\n        }\n      : {\n          items: items,\n          filter: state.filter,\n        };\n  },\n\n  [contactsActions.changeFilter]: (state, { payload }) => {\n    return {\n      ...state,\n      filter: payload,\n    };\n  },\n});\nexport default contactsReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport contactsReducer from './contacts/contacts-reduser';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './ContactsForm.css';\n\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nclass ContactsForm extends Component {\n  static propTypes = {\n    onContact: propTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    const { onContact } = this.props;\n\n    event.preventDefault();\n    onContact(this.state);\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({ name: '', number: '' });\n  }\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter name\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Number\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter number\"\n              value={number}\n              name=\"number\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onContact: contact => dispatch(contactsActions.saveContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactsForm);\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst ContactListItem = ({ name, number, onRemove }) => (\n  <li className=\"listContacts\">\n    <span className=\"list\">{name}</span>\n    <span className=\"list\"> {number}</span>\n    <button className=\"list\" type=\"button\" onClick={onRemove}>\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n  onRemove: propTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport './Contact.css';\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className=\"contextListContacts\">\n    <header className=\"listContacts\">\n      <span className=\"headerList\">name</span>\n      <span className=\"headerList\">telephone</span>\n      <span className=\"headerList\">action</span>\n    </header>\n\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        name={name}\n        number={number}\n        onRemove={() => onRemoveContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: propTypes.oneOfType([\n    propTypes.arrayOf(\n      propTypes.exact({\n        id: propTypes.string.isRequired,\n        name: propTypes.string.isRequired,\n        number: propTypes.number.isRequired,\n      }),\n    ),\n    propTypes.array,\n  ]),\n  onRemoveContact: propTypes.func.isRequired,\n};\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveContact: id => dispatch(contactsActions.removeContact(id)),\n  onToggleCompleted: () => null,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ value, handleFilter }) => (\n  <div>\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter name\"\n        value={value}\n        name=\"filter\"\n        onChange={handleFilter}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: propTypes.string.isRequired,\n  handleFilter: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleFilter: event =>\n    dispatch(contactsActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport propTypes from 'prop-types';\nimport './modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal__content\">\n          <span>{this.props.children}</span>\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\nModal.propTypes = {\n  onClose: propTypes.func.isRequired,\n  children: propTypes.string.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ContactsForm from './ContactsForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport Modal from './Modal';\n\nimport '../../node_modules/modern-normalize/modern-normalize.css';\n\nclass App extends Component {\n  state = {\n    // message: '',\n    showModal: this.props.showModal,\n  };\n  static propTypes = {\n    message: propTypes.string,\n    showModal: propTypes.bool,\n  };\n\n  closeModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n    // this.props.showModal = false;\n  };\n\n  render() {\n    const { showModal } = this.state;\n    const { message } = this.props;\n    // const { message, showModal } = this.props;\n    //console.log(showModal);\n    return (\n      <>\n        {message !== '' && showModal ? (\n          <Modal onClose={this.closeModal}>{message}</Modal>\n        ) : null}\n\n        <h1>Phonebook</h1>\n        <ContactsForm />\n        <h2>Contact</h2>\n\n        <Filter />\n\n        <ContactList />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  //console.log(state.message);\n  return {\n    message: state.contacts.message,\n    showModal: state.contacts.showModal,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}